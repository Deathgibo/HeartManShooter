/*mMat = glm::mat4(1.0f);
		mMat = glm::translate(mMat, glm::vec3(0, weapon->CurrentOffset.y, 0) + weapon->CurrentOffset.x*glm::normalize(glm::vec3(camera.lookdirection.x, 0, camera.lookdirection.z)));//move weapon offset;
		mMat = glm::translate(mMat, camera.rightdirection*weapon->CurrentOffset.x + camera.updirection*weapon->CurrentOffset.y + camera.lookdirection*weapon->CurrentOffset.z);//move weapon offset;
		mMat = glm::translate(mMat, glm::vec3(0, MarioOffset.y, 0) + MarioOffset.x*glm::normalize(glm::vec3(camera.lookdirection.x, 0, camera.lookdirection.z)));//move camera model offset
		mMat = glm::translate(mMat, position);
		mMat = mMat * Utils::GetRodriguezMatrix(camera.rightdirection, Utils::ToRadians(-camera.pitch + 90.0f));
		mMat = mMat * Utils::GetRodriguezMatrix(glm::vec3(0.0f,1.0f,0.0f), Utils::ToRadians(-camera.yaw - 90.0f));

		mMat = glm::translate(mMat, glm::normalize(eyex + eyey)*1.0f);//move yz circle around eyes
		mMat = glm::translate(mMat, position + glm::normalize(positionx + positiony)*1.0f);//move the x,z circle around position




mMat = glm::mat4(1.0f);
	glm::vec3 positionx, positiony, eyex, eyey;
	positionx = (glm::vec3(1.0f, 0.0f, 0.0f)*cos(Utils::ToRadians(-camera.yaw - 90.0f)));
	positiony = (glm::vec3(0.0f, 0.0f, -1.0f)*sin(Utils::ToRadians(-camera.yaw - 90.0f)));
	eyex = glm::normalize(glm::vec3(camera.lookdirection.x, 0.0f, camera.lookdirection.z))*cos(Utils::ToRadians(-camera.pitch + 90.0f));
	eyey = (glm::vec3(0.0f, 1.0f, 0.0f)*sin(Utils::ToRadians(-camera.pitch + 90.0f)));








/* This is to render weapon if were not rendering model_body, make sure to change camera too
		mMat = glm::mat4(1.0f);
		mMat = glm::translate(mMat, position);
		mMat = mMat * Utils::GetRodriguezMatrix(glm::vec3(0.0f, 1.0f, 0.0f), Utils::ToRadians(-camera.yaw - 90));
		mMat = mMat * Utils::GetRodriguezMatrix(glm::vec3(1.0f, 0.0f, 0.0f), Utils::ToRadians(-camera.pitch + 90));
		mMat = glm::translate(mMat, weapon->Offset);*/